@import url("https://fonts.googleapis.com/css?family=Open+Sans&display=swap");

/*
*   Variables
*/
:root {
  /*dark*/
  --backgroundColor: rgb(97, 97, 97);
  --mainColor1: rgb(61, 61, 61);
  --mainColor2: rgb(95, 95, 95);
  --colorScheme: dark;
  --boxshadow: 10px 10px 5px 0px rgba(165, 165, 165, 0.75);
  /*free internal fire pit of hell*/
  /*
    --backgroundColor: rgb(236, 236, 236);
    --mainColor1: rgb(214, 214, 214);
    --mainColor2: rgb(231, 231, 231);
    --colorScheme: light;
    --boxshadow: 10px 10px 5px 0px rgba(165, 165, 165, 0.75);
*/
}

@property --p {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

.questions_grid {
  display: grid;
  width: 60vw;
  grid-template-columns: 25% 25% 25% 25%;
  margin-right: auto;
  margin-left: auto;
  animation: buttonintro 2s;
}

/*
*   Animations
*/
@keyframes h1intro {
  0% {
    transform: scale(1.4);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes buttonintro {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes imgintro {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes bgScroll {
  0% {
    background-position: 0px 0px;
  }

  100% {
    background-position: 0px -808px;
  }
}

/*
*   Not Valiables
*/
html {
  color-scheme: var(--colorScheme);
  text-align: center;
  font-family: "Manrope-Regular", "OpenSans", sans-serif;
}

body {
  margin: 0px;
  padding: 0px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-image: url();
  animation: bgScroll 20s linear infinite;
  background-position: center;
  background-size: 25%;
}

main {
  margin-top: 3vh;
  width: 70%;
  height: 90vh;

  background-color: var(--backgroundColor);
  border-radius: 40px;
  box-shadow: 10px;

  display: grid;
  align-items: center;
  justify-content: center;

  overflow: hidden;
  box-shadow: var(--boxshadow);
}

h1 {
  animation: h1intro 0.4s;
  font-size: 5vh;
}

h2 {
  margin-right: 1%;
  margin-left: 1%;
}

#img {
  height: 200%;
  width: 70%;
  margin-left: auto;
  margin-right: auto;

  background-position: top;
  background-size: 100%;
  background-repeat: no-repeat;

  animation: imgintro 1s;
}

#colorChanger {
  position: fixed;
  width: 90px;
  top: 0px;
  right: 0px;
}

#colorChanger:hover {
  cursor: pointer;
}

#persentageResult {
  display: flex;
  width: 100%;
  justify-content: space-between;
}

/*
*   Classes
*/

.questions_grid_item {
  background-color: var(--mainColor1);
  border: 4px var(--mainColor2) solid;
  transition: all 0.7s;
  user-select: none;
  cursor: pointer;
}

.questions_grid_item:hover {
  background-color: var(--mainColor2);
  border: 4px var(--mainColor1) solid;
}

/*
/*
*   Responsive
*/
@media screen and (max-width:1200px) {
  #persentageResult {
    display: block;
    width: 100%;
  }

}

@media screen and (max-width: 800px) {
  h1 {
    font-size: 180%;
  }

  #img {
    width: 90%;
    height: 200%;
    margin: 0px;
    margin-left: 5%;
  }

  .questions_grid {
    grid-template-columns: auto;
  }

  body {
    background-size: 100%;
  }

}

/** PIE **/

.pie {
  --p: 20;
  --b: 22px;
  --c: darkred;
  --w: 150px;

  width: var(--w);
  aspect-ratio: 1;
  position: relative;
  display: inline-grid;
  margin: 5px;
  place-content: center;
  font-size: 25px;
  font-weight: bold;
  font-family: sans-serif;
  opacity: 0;
}

.pie:before,
.pie:after {
  content: "";
  position: absolute;
  border-radius: 50%;
}

.pie:before {
  inset: 0;
  background:
    radial-gradient(farthest-side, var(--c) 98%, #0000) top/var(--b) var(--b) no-repeat,
    conic-gradient(var(--c) calc(var(--p)*1%), #0000 0);
  -webkit-mask: radial-gradient(farthest-side, #0000 calc(99% - var(--b)), #000 calc(100% - var(--b)));
  mask: radial-gradient(farthest-side, #0000 calc(99% - var(--b)), #000 calc(100% - var(--b)));
}

.pie:after {
  inset: calc(50% - var(--b)/2);
  background: var(--c);
  transform: rotate(calc(var(--p)*3.6deg)) translateY(calc(50% - var(--w)/2));
}

.animate {
  animation: p 1s .5s both;
}

.no-round:before {
  background-size: 0 0, auto;
}

.no-round:after {
  content: none;
}

@keyframes p {
  from {
    --p: 0
  }
}